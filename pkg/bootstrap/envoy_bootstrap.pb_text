stats_config: {
    # Without this option it create a lot of regex, may run out of space or have slow startup.
    use_all_default_tags: {value: false}
}

admin: {
  access_log_path: "/dev/stdout"
  address: {
    # Only allow debugging from localhost
    socket_address: { address: "127.0.0.1", port_value: 15000 }
  }
}

dynamic_resources: {
  lds_config: {
    api_config_source: {
      api_type: REST_LEGACY
      refresh_delay: {seconds: 10}
      # Pilot cluster is named 'rds' for compatibility with existing LDS, which hardcodes this name for the RDS API.
      cluster_names: ["rds"]
    }
  }
  cds_config: {
     api_config_source: {
        api_type: REST_LEGACY
        refresh_delay: {seconds: 10}
        cluster_names: ["rds"]
     }
  }
  # Required - without it cds_config doesn't work
  deprecated_v1: {
    sds_config: {
      api_config_source: {
            api_type: REST_LEGACY
            refresh_delay: {seconds: 10}
            cluster_names: ["rds"]
      }
    }
  }
}

static_resources: {
    clusters: [
        {
            # A single cluster is used for pilot for all services. This reduces the number of connections and
            # improves locality. The name 'rds' is used because pilot v1 LDS is hardcoding it, the other
            # clusters can be configured.
            name: "rds"
            type: STRICT_DNS
            connect_timeout: {seconds: 1}
            lb_policy: ROUND_ROBIN
            hosts: [
                { socket_address: { address: "istio-pilot.istio-system", port_value: 8080 }}
            ]
{{if .pilotMTLS }}
            tls_context: {

            }
{{- end}}
        },
        {
            name: "zipkin"
            type: STRICT_DNS
            connect_timeout: {seconds: 1}
            lb_policy: ROUND_ROBIN
            hosts: [
                { socket_address: { address: "localhost", port_value: 6000 }}
            ]
        }
    ]
}

tracing: {
    http: {
        name: "envoy.zipkin"
        config: {
            fields: {
                key: "collector_cluster"
                value: {
                    string_value: "zipkin"
                }
            }
        }
    }
}

stats_sinks: [
    {
        name: "envoy.statsd"
        config: { # struct: fields map<string,Value>
            fields: {
                key: "address"
                value: {
                    struct_value: {
                        fields: {
                            key: "socket_address"
                            value: {
                                struct_value: {
                                    fields: {
                                        key: "address"
                                        value: {string_value: "127.0.0.1"}
                                    }
                                    fields: {
                                        key: "port_value"
                                        value: {number_value: 6000}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
]


